import { SynthOutput } from 'projen/lib/util/synth';
import * as common from './common';

/**
 * Validates that VsCode settings are set properly.
 * @param snapshot Synthesized project output.
 */
export function testSettings(snapshot: SynthOutput): void {
  const expectedSettings: Record<string, unknown> = {
    '//': '~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".',
    'editor.tabSize': 2,
    'editor.stickyTabStops': true,
    'typescript.inlayHints.parameterNames.enabled': 'all',
    'typescript.inlayHints.enumMemberValues.enabled': true,
    'typescript.inlayHints.variableTypes.enabled': true,
    'typescript.inlayHints.propertyDeclarationTypes.enabled': true,
    'javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName': false,
    'javascript.inlayHints.variableTypes.suppressWhenTypeMatchesName': false,
    'typescript.inlayHints.functionLikeReturnTypes.enabled': true,
    'typescript.inlayHints.parameterTypes.enabled': true,
    'editor.inlayHints.fontSize': 10,
    'editor.inlayHints.padding': true,
    'editor.formatOnSave': true,
    'editor.formatOnPaste': true,
  };
  expect(snapshot['.vscode/settings.json']).toStrictEqual(expectedSettings);
}

/**
 * Validates that VsCode launch is set properly.
 * @param snapshot Synthesized project output.
 */
export function testLaunch(snapshot: SynthOutput): void {
  const expectedLaunch: Record<string, unknown> = {
    version: '0.2.0',
    configurations: [
      {
        name: 'Attach to Remote',
        port: 9229,
        request: 'attach',
        skipFiles: ['<node_internals>/**'],
        type: 'node',
      },
    ],
    '//': '~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".',
  };
  expect(snapshot['.vscode/launch.json']).toStrictEqual(expectedLaunch);
}

/**
 * Validates that VsCode tasks are set properly.
 * @param snapshot Synthesized project output.
 */
export function testTasks(snapshot: SynthOutput): void {
  const expectedTasks: Record<string, unknown> = {
    version: '2.0.0',
    tasks: [
      {
        type: 'shell',
        label: 'cds watch',
        command: 'cds',
        args: ['watch'],
        group: {
          kind: 'build',
          isDefault: true,
        },
      },
      {
        type: 'shell',
        label: 'cds serve',
        command: 'cds',
        args: ['serve', '--with-mocks', '--in-memory?'],
      },
    ],
  };
  expect(snapshot['.vscode/tasks.json']).toStrictEqual(expectedTasks);
}

/**
 * Validates that project related files are added to .gitattributes and defined as linguist-generated.
 * @param snapshot Synthesized project output.
 * @param additionalPatterns List of additional file patterns to test for.
 */
export function testGitAttributes(snapshot: SynthOutput, additionalPatterns: RegExp[] = []): void {
  const standardPatterns: RegExp[] = [/\/\.vscode\/settings\.json linguist-generated( $|\s|$)/m];
  const patterns: RegExp[] = [...standardPatterns, ...additionalPatterns];

  common.testGitAttributes(snapshot, patterns);
}
