{
  "author": {
    "email": "mathias.von-kaiz@abs-gmbh.de",
    "name": "Mathias von Kaiz",
    "roles": [
      "author"
    ]
  },
  "bundled": {
    "construct": "^1.0.0"
  },
  "dependencies": {
    "projen": "^0.90.3"
  },
  "dependencyClosure": {
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    },
    "projen": {
      "submodules": {
        "projen.awscdk": {},
        "projen.build": {},
        "projen.cdk": {},
        "projen.cdk8s": {},
        "projen.cdktf": {},
        "projen.circleci": {},
        "projen.github": {},
        "projen.github.workflows": {},
        "projen.gitlab": {},
        "projen.java": {},
        "projen.javascript": {},
        "projen.python": {},
        "projen.release": {},
        "projen.typescript": {},
        "projen.vscode": {},
        "projen.web": {}
      },
      "targets": {
        "go": {
          "moduleName": "github.com/projen/projen-go"
        },
        "java": {
          "maven": {
            "artifactId": "projen",
            "groupId": "io.github.cdklabs"
          },
          "package": "io.github.cdklabs.projen"
        },
        "js": {
          "npm": "projen"
        },
        "python": {
          "distName": "projen",
          "module": "projen"
        }
      }
    }
  },
  "description": "@dxfrontier/projen-template-projects",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/dxfrontier/projen-template-projects.git",
  "jsiiVersion": "5.5.9 (build 9ca058c)",
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    },
    "tscRootDir": "src"
  },
  "name": "@dxfrontier/projen-template-projects",
  "readme": {
    "markdown": "# Projen Template for Github Actions\n\nA project template for (projen)[https://projen.io/] to create a Github Action project.\n\n## Features\n\n- Automates project setup and configuration\n- Pre-configured with tools like TypeScript, ESLint, Prettier, and GitHub Actions\n- Customizable settings for seamless project management\n"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/dxfrontier/projen-template-projects.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "js": {
      "npm": "@dxfrontier/projen-template-projects"
    }
  },
  "types": {
    "@dxfrontier/projen-template-projects.Builder": {
      "abstract": true,
      "assembly": "@dxfrontier/projen-template-projects",
      "docs": {
        "custom": {
          "abstract": "true"
        },
        "stability": "stable",
        "summary": "Base class for managing project builder configurations."
      },
      "fqn": "@dxfrontier/projen-template-projects.Builder",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the builder for a specified project."
        },
        "locationInModule": {
          "filename": "src/base/builder.ts",
          "line": 14
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure the builder for."
            },
            "name": "project",
            "type": {
              "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBase"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/builder.ts",
        "line": 7
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Adds builder to the projects builder registry."
          },
          "locationInModule": {
            "filename": "src/base/builder.ts",
            "line": 22
          },
          "name": "addBuilder",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Installs development dependencies for the builder in the project."
          },
          "locationInModule": {
            "filename": "src/base/builder.ts",
            "line": 52
          },
          "name": "addDevDependencies",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Adds custom entries to the `.gitattributes` file for the builder in the project. Overwrite this in case that manual entries need to be done."
          },
          "locationInModule": {
            "filename": "src/base/builder.ts",
            "line": 60
          },
          "name": "addGitAttributes",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Adds npm scripts specific to the builder within the project."
          },
          "locationInModule": {
            "filename": "src/base/builder.ts",
            "line": 45
          },
          "name": "addScripts",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Configures settings specific to the builder within the project."
          },
          "locationInModule": {
            "filename": "src/base/builder.ts",
            "line": 38
          },
          "name": "addSettings",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Adds template files to the builder's project directory."
          },
          "locationInModule": {
            "filename": "src/base/builder.ts",
            "line": 31
          },
          "name": "addTemplates",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "public": "This method is intended to be called in the constructor of each child class\nto set up the basic configuration for the builder. It sequentially calls\na set of setup methods which performs specific configuration tasks for the project.\nWe cannot use the preSynthesize hook as at this point it is too late setting all up.\n\n### Usage\n- This method should be called in each child's constructor immediately after\n  invoking `super()` to ensure the builder is fully initialized."
            },
            "stability": "stable",
            "summary": "Initialize builder configuration for the project."
          },
          "locationInModule": {
            "filename": "src/base/builder.ts",
            "line": 89
          },
          "name": "initialize"
        },
        {
          "docs": {
            "custom": {
              "public": "true"
            },
            "stability": "stable",
            "summary": "Hook to be called after synthesis."
          },
          "locationInModule": {
            "filename": "src/base/builder.ts",
            "line": 74
          },
          "name": "postSynthesize"
        },
        {
          "docs": {
            "custom": {
              "public": "true"
            },
            "stability": "stable",
            "summary": "Hook to be called before synthesis."
          },
          "locationInModule": {
            "filename": "src/base/builder.ts",
            "line": 67
          },
          "name": "preSynthesize"
        }
      ],
      "name": "Builder",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/base/builder.ts",
            "line": 8
          },
          "name": "project",
          "protected": true,
          "type": {
            "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBase"
          }
        }
      ],
      "symbolId": "src/base/builder:Builder"
    },
    "@dxfrontier/projen-template-projects.CapServiceProject": {
      "assembly": "@dxfrontier/projen-template-projects",
      "base": "@dxfrontier/projen-template-projects.TypeScriptProjectBase",
      "docs": {
        "stability": "stable",
        "summary": "Defines a CAP Service project."
      },
      "fqn": "@dxfrontier/projen-template-projects.CapServiceProject",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the Cap Service project."
        },
        "locationInModule": {
          "filename": "src/cap-service/project.ts",
          "line": 12
        },
        "parameters": [
          {
            "docs": {
              "summary": "Additional project options."
            },
            "name": "options",
            "type": {
              "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBaseOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cap-service/project.ts",
        "line": 7
      },
      "name": "CapServiceProject",
      "symbolId": "src/cap-service/project:CapServiceProject"
    },
    "@dxfrontier/projen-template-projects.CommitLintBase": {
      "abstract": true,
      "assembly": "@dxfrontier/projen-template-projects",
      "base": "@dxfrontier/projen-template-projects.Builder",
      "docs": {
        "custom": {
          "abstract": "true"
        },
        "stability": "stable",
        "summary": "Base class for CommitLint builder implementing all relevant configuration."
      },
      "fqn": "@dxfrontier/projen-template-projects.CommitLintBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the base CommitLint builder."
        },
        "locationInModule": {
          "filename": "src/base/commitlint.ts",
          "line": 15
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure CommitLint for."
            },
            "name": "project",
            "type": {
              "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBase"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/commitlint.ts",
        "line": 10
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Installs development dependencies for the builder in the project."
          },
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 132
          },
          "name": "addDevDependencies",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Adds npm scripts specific to the builder within the project."
          },
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 123
          },
          "name": "addScripts",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Configures settings specific to the builder within the project."
          },
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 114
          },
          "name": "addSettings",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Adds template files to the builder's project directory."
          },
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 105
          },
          "name": "addTemplates",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        }
      ],
      "name": "CommitLintBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Npm dev dependencies.",
            "stability": "stable",
            "summary": "NPM packages to be installed as devDependencies for the CommitLint builder."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 83
          },
          "name": "devDependencies",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "File path to config file.",
            "stability": "stable",
            "summary": "File path to the CommitLint configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 24
          },
          "name": "filePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Configuration entries for package.json.",
            "stability": "stable",
            "summary": "Settings to be added to package.json for the CommitLint builder."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 98
          },
          "name": "npmSettings",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "primitive": "string"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Npm script entries.",
            "stability": "stable",
            "summary": "NPM scripts for the CommitLint builder."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 72
          },
          "name": "scripts",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "primitive": "string"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Template for the config file.",
            "stability": "stable",
            "summary": "Template file for the CommitLint configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 33
          },
          "name": "template",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/base/commitlint:CommitLintBase"
    },
    "@dxfrontier/projen-template-projects.DevContainerBase": {
      "abstract": true,
      "assembly": "@dxfrontier/projen-template-projects",
      "base": "@dxfrontier/projen-template-projects.Builder",
      "docs": {
        "custom": {
          "abstract": "true"
        },
        "stability": "stable",
        "summary": "Base class for DevContainer builder implementing all relevant configuration."
      },
      "fqn": "@dxfrontier/projen-template-projects.DevContainerBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the base DevContainer builder."
        },
        "locationInModule": {
          "filename": "src/base/devcontainer.ts",
          "line": 15
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure DevContainer for."
            },
            "name": "project",
            "type": {
              "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBase"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/devcontainer.ts",
        "line": 10
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Adds npm scripts specific to the builder within the project."
          },
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 161
          },
          "name": "addScripts",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Adds template files to the builder's project directory."
          },
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 154
          },
          "name": "addTemplates",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        }
      ],
      "name": "DevContainerBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Docker image to be used for container.",
            "stability": "stable",
            "summary": "Docker image used for the DevContainer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 33
          },
          "name": "dockerImage",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Extensions used in container.",
            "stability": "stable",
            "summary": "VsCode extensions to be installed in the DevContainer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 55
          },
          "name": "extensions",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Additional features used in container.",
            "stability": "stable",
            "summary": "Features to be installed in the DevContainer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 42
          },
          "name": "features",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "File path to config file.",
            "stability": "stable",
            "summary": "File path to the CommitLint configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 24
          },
          "name": "filePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Npm script entries.",
            "stability": "stable",
            "summary": "NPM scripts used within the DevContainer environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 145
          },
          "name": "scripts",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "primitive": "string"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "remarks": "The first script in `scripts` is used as the postCreateCommand to install dependencies upon creation.",
            "returns": "Template for the config file.",
            "stability": "stable",
            "summary": "Template file for DevContainer creation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 123
          },
          "name": "template",
          "protected": true,
          "type": {
            "fqn": "projen.JsonFileOptions"
          }
        }
      ],
      "symbolId": "src/base/devcontainer:DevContainerBase"
    },
    "@dxfrontier/projen-template-projects.EsLintBase": {
      "abstract": true,
      "assembly": "@dxfrontier/projen-template-projects",
      "base": "@dxfrontier/projen-template-projects.Builder",
      "docs": {
        "custom": {
          "abstract": "true"
        },
        "stability": "stable",
        "summary": "Base class for ESLint builder implementing all relevant configuration."
      },
      "fqn": "@dxfrontier/projen-template-projects.EsLintBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the base EsLint builder."
        },
        "locationInModule": {
          "filename": "src/base/eslint.ts",
          "line": 13
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure EsLint builder for."
            },
            "name": "project",
            "type": {
              "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBase"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/eslint.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Configures settings specific to the builder within the project."
          },
          "locationInModule": {
            "filename": "src/base/eslint.ts",
            "line": 29
          },
          "name": "addSettings",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        }
      ],
      "name": "EsLintBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Patterns for the ignore settings.",
            "stability": "stable",
            "summary": "Ignore settings to be used in EsLint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/eslint.ts",
            "line": 22
          },
          "name": "ignoreSettings",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/base/eslint:EsLintBase"
    },
    "@dxfrontier/projen-template-projects.GitBase": {
      "abstract": true,
      "assembly": "@dxfrontier/projen-template-projects",
      "base": "@dxfrontier/projen-template-projects.Builder",
      "docs": {
        "custom": {
          "abstract": "true"
        },
        "stability": "stable",
        "summary": "Base class for Git builder implementing all relevant configuration."
      },
      "fqn": "@dxfrontier/projen-template-projects.GitBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the base Git builder."
        },
        "locationInModule": {
          "filename": "src/base/git.ts",
          "line": 13
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure Git builder for."
            },
            "name": "project",
            "type": {
              "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBase"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/git.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Configures settings specific to the builder within the project."
          },
          "locationInModule": {
            "filename": "src/base/git.ts",
            "line": 29
          },
          "name": "addSettings",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        }
      ],
      "name": "GitBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Patterns for the ignore settings.",
            "stability": "stable",
            "summary": "Ignore settings to be used in Git."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/git.ts",
            "line": 22
          },
          "name": "ignoreSettings",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/base/git:GitBase"
    },
    "@dxfrontier/projen-template-projects.GitHubActionProject": {
      "assembly": "@dxfrontier/projen-template-projects",
      "base": "@dxfrontier/projen-template-projects.TypeScriptProjectBase",
      "docs": {
        "stability": "stable",
        "summary": "Defines a GitHub Action project."
      },
      "fqn": "@dxfrontier/projen-template-projects.GitHubActionProject",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the GitHub Action project."
        },
        "locationInModule": {
          "filename": "src/github-action/project.ts",
          "line": 13
        },
        "parameters": [
          {
            "docs": {
              "summary": "Additional project options."
            },
            "name": "options",
            "type": {
              "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBaseOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/github-action/project.ts",
        "line": 8
      },
      "name": "GitHubActionProject",
      "symbolId": "src/github-action/project:GitHubActionProject"
    },
    "@dxfrontier/projen-template-projects.GitHubBase": {
      "abstract": true,
      "assembly": "@dxfrontier/projen-template-projects",
      "base": "@dxfrontier/projen-template-projects.Builder",
      "docs": {
        "custom": {
          "abstract": "true"
        },
        "stability": "stable",
        "summary": "Base class for GitHub builder implementing all relevant configuration."
      },
      "fqn": "@dxfrontier/projen-template-projects.GitHubBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the base GitHub builder."
        },
        "locationInModule": {
          "filename": "src/base/github.ts",
          "line": 17
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure GitHub builder for."
            },
            "name": "project",
            "type": {
              "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBase"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/github.ts",
        "line": 12
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Adds template files to the builder's project directory."
          },
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 469
          },
          "name": "addTemplates",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Creates the template file for a GitHub bug issue."
          },
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 400
          },
          "name": "createBugIssue",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Creates the configuration file for the cliff toml CHANGELOG creation in release workflow."
          },
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 460
          },
          "name": "createCliffTomlConfiguration",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Creates the template file for a GitHub feature issue."
          },
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 410
          },
          "name": "createFeatureIssue",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Creates the template file for a GitHub housekeeping issue."
          },
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 420
          },
          "name": "createHousekeepingIssue",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Creates the template file for a GitHub pull request."
          },
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 390
          },
          "name": "createPullRequest",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Creates the template file for a GitHub question issue."
          },
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 430
          },
          "name": "createQuestionIssue",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Creates the template file for a GitHub release workflow."
          },
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 440
          },
          "name": "createReleaseWorkflow",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Creates the template file for a GitHub stale workflow."
          },
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 450
          },
          "name": "createStaleWorkflow",
          "protected": true
        }
      ],
      "name": "GitHubBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "File path to bug issue file.",
            "stability": "stable",
            "summary": "File path to GitHub bug issue template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 26
          },
          "name": "bugIssueFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Template for the bug issue template file.",
            "stability": "stable",
            "summary": "Issue template for the GitHub Bug configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 106
          },
          "name": "bugIssueTemplate",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "remarks": "This file is used by release workflow to create the Changelog.",
            "returns": "Template for the cliff toml file.",
            "stability": "stable",
            "summary": "Cliff toml configuration for the GitHub configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 220
          },
          "name": "cliffTomlConfiguration",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "remarks": "This file is used by release workflow to create the Changelog.",
            "returns": "File path to cliff toml file.",
            "stability": "stable",
            "summary": "File path to the Cliff toml configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 63
          },
          "name": "cliffTomlFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "File path to feature issue file.",
            "stability": "stable",
            "summary": "File path to GitHub feature issue template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 35
          },
          "name": "featureIssueFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Template for the feature issue template file.",
            "stability": "stable",
            "summary": "Issue template for the GitHub feature configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 135
          },
          "name": "featureIssueTemplate",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "File path to housekeeping issue file.",
            "stability": "stable",
            "summary": "File path to GitHub housekeeping issue template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 44
          },
          "name": "housekeepingIssueFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Template for the housekeeping issue template file.",
            "stability": "stable",
            "summary": "Issue template for the GitHub housekeeping configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 166
          },
          "name": "housekeepingIssueTemplate",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "File path to pull request template file.",
            "stability": "stable",
            "summary": "Pull Request template for the GitHub configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 72
          },
          "name": "pullRequestTemplate",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "File path to question issue file.",
            "stability": "stable",
            "summary": "File path to GitHub question issue template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 53
          },
          "name": "questionIssueFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Template for the question issue template file.",
            "stability": "stable",
            "summary": "Template for the GitHub Question Issue configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 197
          },
          "name": "questionIssueTemplate",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Options for release workflow",
            "stability": "stable",
            "summary": "Workflow release template for the GitHub configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 314
          },
          "name": "releaseWorkflowOptions",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Options for stale workflow",
            "stability": "stable",
            "summary": "Workflow stale template options for the GitHub configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 347
          },
          "name": "staleWorkflowOptions",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/base/github:GitHubBase"
    },
    "@dxfrontier/projen-template-projects.HuskyBase": {
      "abstract": true,
      "assembly": "@dxfrontier/projen-template-projects",
      "base": "@dxfrontier/projen-template-projects.Builder",
      "docs": {
        "custom": {
          "abstract": "true"
        },
        "stability": "stable",
        "summary": "Base class for Husky builder implementing all relevant configuration."
      },
      "fqn": "@dxfrontier/projen-template-projects.HuskyBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the Husky builder."
        },
        "locationInModule": {
          "filename": "src/base/husky.ts",
          "line": 15
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure Husky for."
            },
            "name": "project",
            "type": {
              "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBase"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/husky.ts",
        "line": 10
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Installs development dependencies for the builder in the project."
          },
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 119
          },
          "name": "addDevDependencies",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Adds npm scripts specific to the builder within the project."
          },
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 110
          },
          "name": "addScripts",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Adds template files to the builder's project directory."
          },
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 102
          },
          "name": "addTemplates",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Creates the template file for the Husky commit-msg hook."
          },
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 83
          },
          "name": "createCommitMsgHook",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Creates the template file for the Husky pre-commit hook."
          },
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 93
          },
          "name": "createPreCommitHook",
          "protected": true
        }
      ],
      "name": "HuskyBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "File path to commit-msg hook file.",
            "stability": "stable",
            "summary": "File path to the Husky commit-msg hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 24
          },
          "name": "commitMsgFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Template for the commit-msg hook file.",
            "stability": "stable",
            "summary": "Commit-msg hook template for the Husky configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 42
          },
          "name": "commitMsgTemplate",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Npm dev dependencies.",
            "stability": "stable",
            "summary": "NPM packages to be installed as devDependencies for the CommitLint builder."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 75
          },
          "name": "devDependencies",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "File path to pre-commit hook file.",
            "stability": "stable",
            "summary": "File path to the Husky pre-commit hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 33
          },
          "name": "preCommitFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Template for the pre-commit hook file.",
            "stability": "stable",
            "summary": "Pre-commit hook template for the Husky configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 55
          },
          "name": "preCommitTemplate",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Npm script entries.",
            "stability": "stable",
            "summary": "NPM scripts for the CommitLint builder."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 64
          },
          "name": "scripts",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "primitive": "string"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/base/husky:HuskyBase"
    },
    "@dxfrontier/projen-template-projects.NpmPackageBase": {
      "abstract": true,
      "assembly": "@dxfrontier/projen-template-projects",
      "base": "@dxfrontier/projen-template-projects.Builder",
      "docs": {
        "custom": {
          "abstract": "true"
        },
        "stability": "stable",
        "summary": "Base class for NPM Package builder implementing all relevant configuration."
      },
      "fqn": "@dxfrontier/projen-template-projects.NpmPackageBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the base NPM Package builder."
        },
        "locationInModule": {
          "filename": "src/base/npm.ts",
          "line": 14
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure NPM for."
            },
            "name": "project",
            "type": {
              "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBase"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/npm.ts",
        "line": 9
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Installs development dependencies for the builder in the project."
          },
          "locationInModule": {
            "filename": "src/base/npm.ts",
            "line": 109
          },
          "name": "addDevDependencies",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Adds custom entries to the `.gitattributes` file for the builder in the project. Overwrite this in case that manual entries need to be done."
          },
          "locationInModule": {
            "filename": "src/base/npm.ts",
            "line": 98
          },
          "name": "addGitAttributes",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Configures settings specific to the builder within the project."
          },
          "locationInModule": {
            "filename": "src/base/npm.ts",
            "line": 78
          },
          "name": "addSettings",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "remarks": "Overwrite this method if you want to keep the projen standard scripts.",
            "stability": "stable",
            "summary": "Removes the NPM Package scripts associated with Projen NPM Package initialization."
          },
          "locationInModule": {
            "filename": "src/base/npm.ts",
            "line": 89
          },
          "name": "removeScripts",
          "protected": true
        }
      ],
      "name": "NpmPackageBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/npm.ts",
            "line": 40
          },
          "name": "devDependencies",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "File paths for .gitattributes entries.",
            "stability": "stable",
            "summary": "File paths for the .gitattributes file entries. These entries are not added automatically by projen and we have not extra builder for these. So we handle them here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/npm.ts",
            "line": 25
          },
          "name": "gitAttributesFilePaths",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "abstract": "true",
              "protected": "true"
            },
            "returns": "File paths for package.json file entry.",
            "stability": "stable",
            "summary": "NPM file paths to be packaged for the NPM Package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/npm.ts",
            "line": 35
          },
          "name": "npmFilePaths",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "remarks": "These scripts are added by Projen on project initialization\nand are not needed for our projects.\nOverwrite this method if you want to keep the projen standard scripts.",
            "returns": "Projen standard script entries.",
            "stability": "stable",
            "summary": "Getter retrieving the npm scripts to be removed from NPM Package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/npm.ts",
            "line": 52
          },
          "name": "projenScripts",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/base/npm:NpmPackageBase"
    },
    "@dxfrontier/projen-template-projects.PrettierBase": {
      "abstract": true,
      "assembly": "@dxfrontier/projen-template-projects",
      "base": "@dxfrontier/projen-template-projects.Builder",
      "docs": {
        "custom": {
          "abstract": "true"
        },
        "stability": "stable",
        "summary": "Base class for Prettier builder implementing all relevant configuration."
      },
      "fqn": "@dxfrontier/projen-template-projects.PrettierBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the base Prettier builder."
        },
        "locationInModule": {
          "filename": "src/base/prettier.ts",
          "line": 15
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure Prettier for."
            },
            "name": "project",
            "type": {
              "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBase"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/prettier.ts",
        "line": 10
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Adds entries to the `.prettierignore` file."
          },
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 145
          },
          "name": "addPrettierIgnoreEntries",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Adds npm scripts specific to the builder within the project."
          },
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 114
          },
          "name": "addScripts",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Configures settings specific to the builder within the project."
          },
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 107
          },
          "name": "addSettings",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Hook to be called before synthesis."
          },
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 137
          },
          "name": "preSynthesize",
          "overrides": "@dxfrontier/projen-template-projects.Builder"
        }
      ],
      "name": "PrettierBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "File path to ignore file.",
            "stability": "stable",
            "summary": "File path to the Prettier ignore configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 24
          },
          "name": "ignoreFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "File paths for ignore file entries.",
            "stability": "stable",
            "summary": "File paths to the Prettier ignore entries."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 42
          },
          "name": "ignoreFilePaths",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Npm script entries.",
            "stability": "stable",
            "summary": "NPM scripts used by Prettier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 98
          },
          "name": "scripts",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "primitive": "string"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Entries for the settings file.",
            "stability": "stable",
            "summary": "Settings for the Prettier configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 80
          },
          "name": "settings",
          "protected": true,
          "type": {
            "fqn": "projen.javascript.PrettierOverride"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "File path to setting file.",
            "stability": "stable",
            "summary": "File path to the Prettier settings configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 33
          },
          "name": "settingsFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/base/prettier:PrettierBase"
    },
    "@dxfrontier/projen-template-projects.TypeScriptProjectBase": {
      "abstract": true,
      "assembly": "@dxfrontier/projen-template-projects",
      "base": "projen.typescript.TypeScriptProject",
      "docs": {
        "custom": {
          "abstract": "true"
        },
        "stability": "stable",
        "summary": "Base class for managing project configuration."
      },
      "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the project."
        },
        "locationInModule": {
          "filename": "src/base/project.ts",
          "line": 21
        },
        "parameters": [
          {
            "docs": {
              "summary": "Additional project options."
            },
            "name": "options",
            "type": {
              "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBaseOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/project.ts",
        "line": 14
      },
      "methods": [
        {
          "docs": {
            "returns": "The builder if found, otherwise undefined.",
            "stability": "stable",
            "summary": "Finds a builder in the registry by its constructor name."
          },
          "locationInModule": {
            "filename": "src/base/project.ts",
            "line": 63
          },
          "name": "findBuilderByName",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the builder to search for."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@dxfrontier/projen-template-projects.Builder"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "override": "true",
              "public": "true"
            },
            "remarks": "Order is *not* guaranteed.",
            "stability": "stable",
            "summary": "Called after all components are synthesized."
          },
          "locationInModule": {
            "filename": "src/base/project.ts",
            "line": 82
          },
          "name": "postSynthesize",
          "overrides": "projen.Project"
        },
        {
          "docs": {
            "custom": {
              "override": "true",
              "public": "true"
            },
            "stability": "stable",
            "summary": "Called before all components are synthesized."
          },
          "locationInModule": {
            "filename": "src/base/project.ts",
            "line": 71
          },
          "name": "preSynthesize",
          "overrides": "projen.Project"
        },
        {
          "docs": {
            "custom": {
              "public": "true"
            },
            "stability": "stable",
            "summary": "Register a builder to be managed by this project."
          },
          "locationInModule": {
            "filename": "src/base/project.ts",
            "line": 54
          },
          "name": "registerBuilder",
          "parameters": [
            {
              "docs": {
                "summary": "The builder to register (must extend BaseBuilder)."
              },
              "name": "builder",
              "type": {
                "fqn": "@dxfrontier/projen-template-projects.Builder"
              }
            }
          ]
        }
      ],
      "name": "TypeScriptProjectBase",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/base/project.ts",
            "line": 15
          },
          "name": "builderRegistry",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@dxfrontier/projen-template-projects.Builder"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/base/project:TypeScriptProjectBase"
    },
    "@dxfrontier/projen-template-projects.TypeScriptProjectBaseOptions": {
      "assembly": "@dxfrontier/projen-template-projects",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBaseOptions",
      "interfaces": [
        "projen.typescript.TypeScriptProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/base/project.ts",
        "line": 8
      },
      "name": "TypeScriptProjectBaseOptions",
      "symbolId": "src/base/project:TypeScriptProjectBaseOptions"
    },
    "@dxfrontier/projen-template-projects.VsCodeBase": {
      "abstract": true,
      "assembly": "@dxfrontier/projen-template-projects",
      "base": "@dxfrontier/projen-template-projects.Builder",
      "docs": {
        "custom": {
          "abstract": "true"
        },
        "stability": "stable",
        "summary": "Base class for VsCode builder implementing all relevant configuration."
      },
      "fqn": "@dxfrontier/projen-template-projects.VsCodeBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the base VsCode builder."
        },
        "locationInModule": {
          "filename": "src/base/vscode.ts",
          "line": 13
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure VsCode builder for."
            },
            "name": "project",
            "type": {
              "fqn": "@dxfrontier/projen-template-projects.TypeScriptProjectBase"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/vscode.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "Configures settings specific to the builder within the project."
          },
          "locationInModule": {
            "filename": "src/base/vscode.ts",
            "line": 53
          },
          "name": "addSettings",
          "overrides": "@dxfrontier/projen-template-projects.Builder",
          "protected": true
        }
      ],
      "name": "VsCodeBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "Entries for the settings file.",
            "stability": "stable",
            "summary": "Settings to be installed in VsCode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/vscode.ts",
            "line": 31
          },
          "name": "settings",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "returns": "File path to settings file.",
            "stability": "stable",
            "summary": "File path to the VsCode settings configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/vscode.ts",
            "line": 22
          },
          "name": "settingsFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/base/vscode:VsCodeBase"
    }
  },
  "version": "0.0.0",
  "fingerprint": "vbGxyxNLJz07Gg5+P3g1sWA3/1InwUHLCjQ9k4xaOVM="
}